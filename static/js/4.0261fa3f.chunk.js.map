{"version":3,"sources":["components/Pages/LoginPage.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["LoginPage","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleEmail","useCallback","target","value","handlePassword","handleSubmit","event","preventDefault","postLogin","className","onSubmit","autoComplete","type","name","onChange","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"wMAyDeA,UApDf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAEXC,EAAcC,uBAAY,YAAiB,IAAdC,EAAa,EAAbA,OAC/BP,EAASO,EAAOC,SACjB,IAEGC,EAAiBH,uBAAY,YAAiB,IAAdC,EAAa,EAAbA,OAClCL,EAAYK,EAAOC,SACpB,IAEGE,EAAeJ,uBAAY,SAACK,GAC9BA,EAAMC,iBACNT,EAASU,YAAU,CAAC,MAASd,EAAO,SAAYE,KAChDD,EAAS,IACTE,EAAY,MACZ,CAACC,EAAUJ,EAAOE,IAEtB,OACI,gCACI,4CACA,uBACIa,UAAU,OACVC,SAAUL,EACVM,aAAa,MAHjB,UAKI,wBAAOF,UAAU,YAAjB,kBAEI,uBACIG,KAAK,QACLC,KAAK,QACLV,MAAOT,EACPoB,SAAUd,OAGlB,wBAAOS,UAAU,YAAjB,qBAEI,uBACIG,KAAK,WACLC,KAAK,WACLV,MAAOP,EACPkB,SAAUV,OAGlB,wBAAQQ,KAAK,SAAb,2B,mGC/CD,SAASG,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGzB,QAETc,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/4.0261fa3f.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { postLogin } from '../../redux/authorization/authorizationActions'\nimport './Page.css'\n\nfunction LoginPage() {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const dispatch = useDispatch()\n\n    const handleEmail = useCallback(({ target }) => {\n        setEmail(target.value)\n    }, [])\n\n    const handlePassword = useCallback(({ target }) => {\n        setPassword(target.value)\n    }, [])\n    \n    const handleSubmit = useCallback((event) => {\n        event.preventDefault()\n        dispatch(postLogin({'email': email, 'password': password}))\n        setEmail('')\n        setPassword('')\n     }, [dispatch, email, password])\n        \n    return (\n        <div>\n            <h1>Login Page</h1>\n            <form\n                className=\"form\"\n                onSubmit={handleSubmit}\n                autoComplete=\"off\"\n            >\n                <label className=\"formLabel\">\n                    Email\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={handleEmail}\n                    />\n                </label>\n                <label className=\"formLabel\">\n                    Password\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handlePassword}\n                    />\n                </label>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginPage","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}